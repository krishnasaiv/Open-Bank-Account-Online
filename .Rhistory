rm(list = ls())
install.packages(c("DBI", "devtools", "dplyr", "DT", "formattable", "ggplot2", "readxl", "RSQLite", "shiny", "shinydashboard", "shinyjs", "shinythemes", "shinyWidgets", "sodium"))
rm(list=ls())
print("............ Running App ............")
if (!require("DT")) install.packages('DT')
if (!require("shiny")) install.packages('shiny')
if (!require("shinydashboard")) install.packages('shinydashboard')
if (!require("shinythemes")) install.packages("shinythemes")
# if (!require("reactlog")) install.packages("reactlog")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("formattable")) install.packages("formattable")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("readxl")) install.packages("readxl")
if (!require("dplyr")) install.packages("dplyr")
if (!require("DBI")) install.packages("DBI")
if (!require("devtools")) install.packages('devtools')
if (!require("sodium")) install.packages('sodium')
if (!require("shinyauthr")) install_local("./shinyauthr-master.zip")
if (!require("shinyauthr")) devtools::install_github("paulc91/shinyauthr")
runApp('Me/Employee Onboarding')
runApp('Me/Employee Onboarding')
rm(list=ls())
print("............ Running App ............")
if (!require("DT")) install.packages('DT')
if (!require("shiny")) install.packages('shiny')
if (!require("shinydashboard")) install.packages('shinydashboard')
if (!require("shinythemes")) install.packages("shinythemes")
# if (!require("reactlog")) install.packages("reactlog")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("formattable")) install.packages("formattable")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("readxl")) install.packages("readxl")
if (!require("dplyr")) install.packages("dplyr")
if (!require("DBI")) install.packages("DBI")
if (!require("devtools")) install.packages('devtools')
if (!require("sodium")) install.packages('sodium')
if (!require("shinyauthr")) devtools::install_github("paulc91/shinyauthr")
options(shiny.reactlog = TRUE)
##################################### Pre-Run #####################################
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mcc_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
runApp()
rm(list=ls())
print("............ Running App ............")
if (!require("DT")) install.packages('DT')
if (!require("shiny")) install.packages('shiny')
if (!require("shinydashboard")) install.packages('shinydashboard')
if (!require("shinythemes")) install.packages("shinythemes")
# if (!require("reactlog")) install.packages("reactlog")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("formattable")) install.packages("formattable")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("readxl")) install.packages("readxl")
if (!require("dplyr")) install.packages("dplyr")
if (!require("DBI")) install.packages("DBI")
if (!require("devtools")) install.packages('devtools')
if (!require("sodium")) install.packages('sodium')
if (!require("shinyauthr")) devtools::install_github("paulc91/shinyauthr")
rm(list=ls())
print("............ Running App ............")
if (!require("DT")) install.packages('DT')
if (!require("shiny")) install.packages('shiny')
if (!require("shinydashboard")) install.packages('shinydashboard')
if (!require("shinythemes")) install.packages("shinythemes")
# if (!require("reactlog")) install.packages("reactlog")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("formattable")) install.packages("formattable")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("readxl")) install.packages("readxl")
if (!require("dplyr")) install.packages("dplyr")
if (!require("DBI")) install.packages("DBI")
if (!require("devtools")) install.packages('devtools')
if (!require("sodium")) install.packages('sodium')
if (!require("shinyauthr")) devtools::install_github("paulc91/shinyauthr")
options(shiny.reactlog = TRUE)
##################################### Pre-Run #####################################
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mcc_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
if(dbExistsTable(con, "InProgress")){dbRemoveTable(con, "InProgress")}; dbWriteTable(con, "InProgress", InProgress)
if(dbExistsTable(con, "mcc")){dbRemoveTable(con, "mcc")}; dbWriteTable(con, "mcc", mcc)
if(dbExistsTable(con, "summ_table")){dbRemoveTable(con, "summ_table")}; dbWriteTable(con, "summ_table", summ_table)
# if(dbExistsTable(con, "summ_table1")){dbRemoveTable(con, "summ_table1")}; dbWriteTable(con, "summ_table1", summ_table1)
if(dbExistsTable(con, "user_base")){dbRemoveTable(con, "user_base")}; dbWriteTable(con, "user_base", user_base)
if(dbExistsTable(con, "bundled_pricing_options")){dbRemoveTable(con, "bundled_pricing_options")}; dbWriteTable(con, "bundled_pricing_options", bundled_pricing_options)
rm(InProgress, mcc, summ_table, summ_table1, user_base)
# dbListTables(con)
InProgress <- dbReadTable(con, "InProgress")
mcc <- dbReadTable(con, "mcc")
summ_table <- dbReadTable(con, "summ_table")
# summ_table1 <- dbReadTable(con, "summ_table1")
user_base <- dbReadTable(con, "user_base")
bundled_pricing_options <- dbReadTable(con, "bundled_pricing_options")
runApp('employee_onboarding.R')
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mc=c_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
if(dbExistsTable(con, "InProgress")){dbRemoveTable(con, "InProgress")}; dbWriteTable(con, "InProgress", InProgress)
if(dbExistsTable(con, "mcc")){dbRemoveTable(con, "mcc")}; dbWriteTable(con, "mcc", mcc)
if(dbExistsTable(con, "summ_table")){dbRemoveTable(con, "summ_table")}; dbWriteTable(con, "summ_table", summ_table)
# if(dbExistsTable(con, "summ_table1")){dbRemoveTable(con, "summ_table1")}; dbWriteTable(con, "summ_table1", summ_table1)
if(dbExistsTable(con, "user_base")){dbRemoveTable(con, "user_base")}; dbWriteTable(con, "user_base", user_base)
if(dbExistsTable(con, "bundled_pricing_options")){dbRemoveTable(con, "bundled_pricing_options")}; dbWriteTable(con, "bundled_pricing_options", bundled_pricing_options)
rm(InProgress, mcc, summ_table, summ_table1, user_base)
rm(InProgress, mcc, summ_table, user_base, bundled_pricing_options)
##################################### Pre-Run #####################################
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mc=c_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
if(dbExistsTable(con, "InProgress")){dbRemoveTable(con, "InProgress")}; dbWriteTable(con, "InProgress", InProgress)
if(dbExistsTable(con, "mcc")){dbRemoveTable(con, "mcc")}; dbWriteTable(con, "mcc", mcc)
if(dbExistsTable(con, "summ_table")){dbRemoveTable(con, "summ_table")}; dbWriteTable(con, "summ_table", summ_table)
# if(dbExistsTable(con, "summ_table1")){dbRemoveTable(con, "summ_table1")}; dbWriteTable(con, "summ_table1", summ_table1)
if(dbExistsTable(con, "user_base")){dbRemoveTable(con, "user_base")}; dbWriteTable(con, "user_base", user_base)
if(dbExistsTable(con, "bundled_pricing_options")){dbRemoveTable(con, "bundled_pricing_options")}; dbWriteTable(con, "bundled_pricing_options", bundled_pricing_options)
rm(InProgress, mcc, summ_table, user_base, bundled_pricing_options)
# dbListTables(con)
InProgress <- dbReadTable(con, "InProgress")
mcc <- dbReadTable(con, "mcc")
summ_table <- dbReadTable(con, "summ_table")
# summ_table1 <- dbReadTable(con, "summ_table1")
user_base <- dbReadTable(con, "user_base")
bundled_pricing_options <- dbReadTable(con, "bundled_pricing_options")
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mc=c_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
##################################### Pre-Run #####################################
setwd("C:/Users/vootl/OneDrive/Documents/Me/Employee Onboarding")
InProgress <- read.csv(file = "./files/InProgress.csv", stringsAsFactors = F)
mcc <- read.csv(file = "./files/mcc_codes.csv", stringsAsFactors = F)
summ_table <- read.csv(file = "./files/summary.csv", stringsAsFactors = F)
colnames(summ_table) <- c("_", "in_Dollars", "in_Percentage", "Per_Tran")
# summ_table1 <-  read_excel("summary.xlsx")
# summ_table1 <- cbind( summ_table1, Type_ =  c("1", "1", "1", "2", "3", "1"))
# summ_table1$`NET REVENUE %` <- summ_table1$`NET REVENUE %` * 100
user_base <- read.csv(file = "./files/users.csv", header = T, stringsAsFactors = F)
user_base$Password_HASH <- sapply( user_base$Password, sodium::password_store)
bundled_pricing_options <- read.csv("./files/bundled_pricing_option.csv", stringsAsFactors = F)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
if(dbExistsTable(con, "InProgress")){dbRemoveTable(con, "InProgress")}; dbWriteTable(con, "InProgress", InProgress)
if(dbExistsTable(con, "mcc")){dbRemoveTable(con, "mcc")}; dbWriteTable(con, "mcc", mcc)
if(dbExistsTable(con, "summ_table")){dbRemoveTable(con, "summ_table")}; dbWriteTable(con, "summ_table", summ_table)
# if(dbExistsTable(con, "summ_table1")){dbRemoveTable(con, "summ_table1")}; dbWriteTable(con, "summ_table1", summ_table1)
if(dbExistsTable(con, "user_base")){dbRemoveTable(con, "user_base")}; dbWriteTable(con, "user_base", user_base)
if(dbExistsTable(con, "bundled_pricing_options")){dbRemoveTable(con, "bundled_pricing_options")}; dbWriteTable(con, "bundled_pricing_options", bundled_pricing_options)
rm(InProgress, mcc, summ_table, user_base, bundled_pricing_options)
# dbListTables(con)
InProgress <- dbReadTable(con, "InProgress")
mcc <- dbReadTable(con, "mcc")
summ_table <- dbReadTable(con, "summ_table")
# summ_table1 <- dbReadTable(con, "summ_table1")
user_base <- dbReadTable(con, "user_base")
bundled_pricing_options <- dbReadTable(con, "bundled_pricing_options")
runApp('employee_onboarding.R')
runApp('employee_onboarding.R')
View(summ_table)
View(InProgress)
runApp('employee_onboarding.R')
